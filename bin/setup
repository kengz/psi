#!/bin/bash
# This script runs the same sequence as the CircleCI build

if [ $(uname) == "Darwin" ]; then
  if which brew >/dev/null; then
    echo "Brew is already installed"
  else
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi
fi

# install nodejs
if which node >/dev/null; then
  echo "Nodejs is already installed"
else
  if [ $(uname) == "Darwin" ]; then
    brew install node
  else
    curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
    sudo apt-get install -y nodejs
  fi
fi

# install python
if which python3 >/dev/null; then
  echo "Python3 is already installed"
else
  if [ $(uname) == "Darwin" ]; then
    brew install python3
  else
    sudo apt-get -y install python3-dev python3-pip python3-setuptools
  fi
fi

# install MySQL
if which mysql >/dev/null; then
  echo "MySQL is already installed"
else
  if [ $(uname) == "Darwin" ]; then
    brew install mysql
  else
    sudo apt-get -y install mysql-server
  fi
fi

# start mysql
UP=$(pgrep mysql | wc -l);
if [ "$UP" -eq 0 ];
then
  if [ $(uname) == "Darwin" ]; then
    mysql.server start
  else
    service mysql start
  fi
else
  echo "MySQL is already started"
fi

# # install postgres
# if which postgres >/dev/null; then
#   echo "Postgresql is already installed"
# else
#   if [ $(uname) == "Darwin" ]; then
#     brew install postgres
#     brew services start postgresql
#     sleep 5
#     createuser -s postgres
#   else
#     sudo apt-get -y install postgresql postgresql-contrib
#   fi
# fi

# # start postgres
# UP=$(pgrep postgres | wc -l);
# if [ "$UP" -eq 0 ];
# then
#   if [ $(uname) == "Darwin" ]; then
#     brew services start postgresql
#   else
#     service postgresql start
#   fi
# else
#   echo "Postgresql is already started"
# fi

# install pip modules
if python3 -m pip show six socketIO-client >/dev/null; then
  echo "Pip modules already installed"
else
  python3 -m pip install -U six socketIO-client
fi

# install npm modules
if [ -d ./node_modules ]; then
  echo "Npm modules already installed"
else
  npm install
fi

# copy keys file if not already exist
BIN_DIR=`pwd`/bin
$BIN_DIR/copy-config

# run migration
node src/db.js
node_modules/.bin/sequelize db:migrate --env development
node_modules/.bin/sequelize db:migrate --env test
node_modules/.bin/sequelize db:migrate --env production
